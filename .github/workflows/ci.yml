name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          # - runner: ubuntu-24.04-arm
          #   target: aarch64-unknown-linux-gnu
          - runner: macos-13
            target: x86_64-apple-darwin
          - runner: macos-14
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          allow-prereleases: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "0.8.5"

      - name: Install ripgrep
        shell: bash
        run: |
          set -euxo pipefail
          VER="15.0.0"
          case "${{ matrix.target }}" in
            x86_64-unknown-linux-gnu)
              ASSET="x86_64-unknown-linux-musl" # use musl build for portability
              ;;
            x86_64-apple-darwin)
              ASSET="x86_64-apple-darwin"
              ;;
            aarch64-apple-darwin)
              ASSET="aarch64-apple-darwin"
              ;;
            *)
              echo "Unsupported target: ${{ matrix.target }}" >&2
              exit 1
              ;;
          esac
          URL="https://github.com/BurntSushi/ripgrep/releases/download/${VER}/ripgrep-${VER}-${ASSET}.tar.gz"
          echo "Downloading ripgrep from $URL"
          TMPDIR="$(mktemp -d)"
          curl -fsSL "$URL" -o "$TMPDIR/rg.tgz"
          tar -xzf "$TMPDIR/rg.tgz" -C "$TMPDIR"
          RG_PATH="$(find "$TMPDIR" -type f -name rg -perm -111 | head -n1)"
          test -n "$RG_PATH"
          mkdir -p "$HOME/.local/bin"
          cp "$RG_PATH" "$HOME/.local/bin/rg"
          chmod +x "$HOME/.local/bin/rg"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          "$HOME/.local/bin/rg" --version

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run checks
        run: make check

      - name: Run tests
        run: make test

      - name: Build standalone binary
        run: make build

      - name: Smoke test binary --help
        run: ./dist/kimi --help

      - name: Upload binary artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kimi-${{ matrix.target }}
          path: dist/kimi
          if-no-files-found: error
          retention-days: 7
